<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.ericsson.nms</groupId>
		<artifactId>integration</artifactId>
		<version>15.2.0.40</version>
	</parent>

    <groupId>com.ericsson.oss.services.nodesyncmonitor</groupId>
    <artifactId>node-sync-monitor</artifactId>
    <version>1.9.2-SNAPSHOT</version>
    <packaging>pom</packaging>

	<url>http://www.ericsson.com</url>
	<organization>
		<name>Ericsson</name>
	</organization>
	<prerequisites>
		<maven>3.0.3</maven>
	</prerequisites>
	<name>[${project.artifactId}] JEE8 Project</name>
	<properties>
		<!-- Do not use JBoss community version, use EAP version. The property 
			values of the "jboss_managed_local" profile in testsuite/jee need to be updated, 
			when this JBoss version is changed. -->
		<version.jboss.as>7.2.8.1</version.jboss.as>
		<!-- When you want to switch to new Service Framework version only change 
			value below. -->
		<version.service.framework>4.7.2</version.service.framework>
		<version.modeling.annotation.processor>3.37.8</version.modeling.annotation.processor>
		<version.dps>2.119.1</version.dps>
		<version.internalalarmservice>1.203.1</version.internalalarmservice>
		<version.weld>3.0.5.Final</version.weld>
		<version.ejb>3.1</version.ejb>
		<version.jee>8</version.jee>
		<version.guava>25.0.0.redhat-1</version.guava>
		<version.jboss-javaee-spec>1.0.4.Final</version.jboss-javaee-spec>
		<version.mockito>1.9.5</version.mockito>
		<version.junit>4.12</version.junit>
		<version.groovy>2.4.8</version.groovy>
		<version.spock>1.3-groovy-2.4</version.spock>
		<version.cdi-test-support>1.1.218</version.cdi-test-support>
		<version.wiremock>2.2.2</version.wiremock>
		<project.ear.defaultLibBundleDir>lib</project.ear.defaultLibBundleDir>
		<!-- JBoss modules your service will automatically add to classpath -->
		<project.ear.Dependencies>org.slf4j, com.google.guava, com.ericsson.oss.itpf.datalayer.dps.api export</project.ear.Dependencies>
		<!-- SonarQube -->
		<sonar.coverage.exclusions>**/*SystemRecorderBean.java,**/*Constants.java</sonar.coverage.exclusions>

		<ericsson.scm.url>
			scm:git:[fetch=]ssh://gerrit-gamma-read.seli.gic.ericsson.se:29418/OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.services.nodesyncmonitor/node-sync-monitor[push=]ssh://gerrit-gamma.gic.ericsson.se:29418/OSS/ENM-Parent/SQ-Gate/com.ericsson.oss.services.nodesyncmonitor/node-sync-monitor
		</ericsson.scm.url>
	</properties>

	<scm>
		<developerConnection>${ericsson.scm.url}</developerConnection>
		<connection>${ericsson.scm.url}</connection>
		<tag>node-sync-monitor-1.3.1</tag>
	</scm>

	<modules>
		<module>node-sync-monitor-api</module>
		<module>node-sync-monitor-ear</module>
		<module>node-sync-monitor-ejb</module>
		<module>node-sync-monitor-jar</module>
		<module>node-sync-monitor-war</module>
		<module>node-sync-monitor-model-pojo-jar</module>
		<module>node-sync-monitor-model-xml-jar</module>
		<module>ERICnodesyncmonitorservice_CXP9042735</module>
		<module>ERICnodesyncmonitormodel_CXP9042737</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<!-- ServiceFrameworkJBossBOM only imports the Service Framework API modules. 
				No Service Framework implementation module is imported with this BOM. -->
			<dependency>
				<groupId>com.ericsson.oss.itpf.sdk</groupId>
				<artifactId>ServiceFrameworkJBossBOM</artifactId>
				<version>${version.service.framework}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ericsson.oss.itpf.datalayer.dps</groupId>
				<artifactId>data-persistence-service-bom</artifactId>
				<version>${version.dps}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ericsson.oss.itpf.datalayer.dps</groupId>
				<artifactId>dps-core-spi</artifactId>
				<version>${version.dps}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>failureaccess</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${version.guava}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>com.google.guava</groupId>
						<artifactId>failureaccess</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Arquillian BOM. It is used in JEE/JEE Cluster integration tests. -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${version.junit}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- The dependency is needed when "JSR-330: Dependency Injection" is used 
			(e.g. @Inject, @Qualifier etc.) -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- The dependency is needed when CDI (Contexts and Dependency Injection) 
			is used. -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- Dependency for Bean validation -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Dependency for SLF4J logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[2.4,)</versionRange>
										<goals>
											<goal>analyze-dep-mgt</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-ear-plugin</artifactId>
										<versionRange>[2.7,)</versionRange>
										<goals>
											<goal>generate-application-xml</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.ericsson.maven.plugins</groupId>
										<artifactId>rstate-maven-plugin</artifactId>
										<versionRange>[1.0,)</versionRange>
										<goals>
											<goal>rstate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-enforcer-plugin</artifactId>
										<versionRange>[1.1,)</versionRange>
										<goals>
											<goal>enforce</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>build-helper-maven-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>regex-property</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<configuration>
					<filename>${project.parent.artifactId}.${project.packaging}</filename>
					<skip>false</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
